name: BACKEND CI CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Create application.yml directly from the GitHub secret
      - name: Create application.yml file
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml
          # Verify file was created (without showing contents)
          ls -la src/main/resources/

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Docker setup
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bagel-back-container:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/bagel-back-container:cache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/bagel-back-container:cache,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SUH_SERVER_HOST }}
          username: ${{ secrets.SUH_SERVER_USER }}
          password: ${{ secrets.SUH_SERVER_PASSWORD }}
          port: 2022
          script: |
            set -e
            # Get current Seoul time (KST, UTC+9)
            SEOUL_TIME=$(TZ='Asia/Seoul' date '+%Y-%m-%d %H:%M:%S')
            # Set PATH to include Docker binaries
            export PATH=$PATH:/usr/local/bin:/usr/bin:/volume1/@appstore/Docker/usr/bin
            # Store password for sudo commands
            export PW=${{ secrets.SUH_SERVER_PASSWORD }}
            
            # Check Docker availability
            echo "Docker path check:"
            which docker || echo "Docker not found"
            echo "Docker version:"
            echo $PW | sudo -S docker --version || echo "Docker version check failed"
            
            # Pull latest image
            echo $PW | sudo -S docker pull ${{ secrets.DOCKERHUB_USERNAME }}/bagel-back-container:latest
            
            # Stop and remove existing container if it exists
            echo $PW | sudo -S docker stop bagel-back || true
            echo $PW | sudo -S docker rm bagel-back || true
            
            # Run new container with environment variables
            echo $PW | sudo -S docker run -d -p 8093:8080 --name bagel-back \
              -e DB_HOST='suh-project.synology.me' \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              -e DB_USERNAME='kimchi' \
              -e DB_PASSWORD='Kimchi123@' \
              -e JWT_SECRET_KEY='jX7NP2k5qW8zT1aR3bY6cL9dF4mG0hS4vZ5xC8pQ7w2E3r6t' \
              -e SEOUL_TIME="$SEOUL_TIME" \
              -e TZ=Asia/Seoul \
              ${{ secrets.DOCKERHUB_USERNAME }}/bagel-back-container:latest